name: Main workflow
on:
  push:
    branches:
      - main
jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.7-alpine
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8==6.0.0 flake8-isort==6.0.0
      - name: Test with flake8
        run: python -m flake8 backend/
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    strategy:
      matrix:
        image:
          - name: backend
            context: ./backend/
            push: true
            tags: fursov231/kitty-backend:latest
          - name: frontend
            context: ./frontend/
            push: true
            tags: fursov231/kitty-frontend:latest
          - name: gateway
            context: ./nginx/
            push: true
            tags: fursov231/kitty-nginx:latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.image.context }}
          push: true
          tags: ${{ matrix.image.tags }}
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Create env file
        run: echo "${{ secrets.ENV_FILE }}" > .env
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.yml"
          target: "app"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd app
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose --env-file .env up -d
            sudo docker compose exec backend python manage.py migrate
            sudo docker compose exec backend python manage.py collectstatic
            sudo docker compose exec backend cp -r /app/collected_static/. /backend_static/static/